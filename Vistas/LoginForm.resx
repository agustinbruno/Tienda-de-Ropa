<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_cerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DZpqAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btn_minimizar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABdhJREFUeF7t3UFKHFEUBVCH3TS4hpDumRMXk+CSpDcg4oIScCK4B1FxGASTgea+
        ys9EkEQcaNc7B+4S7qW6q+rXHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAsHuenp5WyVFykpwn18ljAvBeaoNqi2qTaptqo1ZjtoC3SJnWyWlynwB8dLVV
        tVnrMWPAa6Q8y+Q4+ZkA7Jrartqw5Zg14F9SmE1ykQDsutqyzZg34CUpykFyVa0BmInb5HDMHPBcCvIp
        uam2AMzMXeKfAHguxVgkl9USgJmqjVuM2QNKSrGd6gEwb9sxe0AKUX/9e9of6OBX4hVBKCnD2VQLgB7O
        xvxBXynCfvJjqgRAD7V5+2MGoaeU4OtUB4BevowZhJ5SgjoyE6Cb0zGD0FNK8P1PFwBa+TZmEHpKCeqE
        LIBubscMQk8pgdf/gI4exgxCTymBCwCgIxcA9JYSuAUAdOQWAL2lBB4CBDryECC9pQReAwQ68hogvaUE
        DgICOnIQEL2lBI4CBrpxFDCUFMHHgIBOfAwISspQnwN+mGoBMG/1OeDPY/6AFGI7VQNg3rZj9oCSUiyS
        y6keAPNUG7cYswf8lWLUrYCbagnAzNwlmzF3wHMpyEFyVW0BmIk68fRwzBzwkhRlk1xUawB2XG2ZX/7w
        v1KYZXKc+FgQsItqu2rDlmPWgNdIedZJHRd8nwB8dLVVtVnrMWPAW6RMq+QoOUnOk+vkMQF4L7VBtUW1
        SbVNtVGrMVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAMDO2Nv7De7olsHm1A+eAAAAAElFTkSuQmCC
</value>
  </data>
</root>